% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_get.R
\name{faust_count_get_pop}
\alias{faust_count_get_pop}
\alias{faust_count_get}
\title{Get counts of subsets identified by FAUST}
\usage{
faust_count_get_pop(
  project_path = NULL,
  data = NULL,
  pop = NULL,
  dem_col = c("sample", "exp_unit", "tot_count", "tot_count_classified", "sampleName",
    "experimentalUnit"),
  exhaustive = FALSE
)

faust_count_get(project_path, exhaustive = FALSE)
}
\arguments{
\item{project_path}{character. FAUST project directory.}

\item{data}{dataframe.
Dataframe where columns specify counts. If \code{NULL},
then it is read in from \code{project_path/faustData/faustCountMatrix.rds}.}

\item{pop}{\code{named character vector} or \code{list}.
If a \code{character vector},
then names specify markers and values specify levels,
e.g. c("CD4" = "-", "CD8" = "+").
Counts of
all annotations will be returned that match these annotations separately,
i.e. not summed.
If a \code{list}, then each element must be a character vector as above.
For a given list element,
instead of all returning all subsets individually that have the correct
level for the specified markers,
we sum over all the subsets matching the specified annotation and
plot the final count.
If \code{NULL}, then all subsets are returned.}

\item{dem_col}{\code{character vector}.
Specifies names of columns in \code{data} that we wish
to keep, regardless of if they match a FAUST annotation.}

\item{exhaustive}{logical. If \code{TRUE},
then counts are taken from the exhaustive FAUST count matrix
rather than the count matrix after excluding subsets that
don't appear in sufficiently many
experimental units. Default is \code{FALSE}.}
}
\value{
A dataframe with columns as specified in
\code{dem_col}, \code{tot_count} (total number of cells classified for a
sample), \code{pop} (population name) and
\code{count} (number of cells in population).
}
\description{
Get counts of subsets identified by FAUST
}
\examples{
# get counts for cells matching one annotation
pop <- c("CD4" = "-", "CD8" = "+")
get_pop_counts(pop = pop)
# get counts for cells matching either of the two annotations
pop <- list(c("CD4" = "-", "CD8" = "+"), c("CD8" = "-", "CD4" = "+"))
get_pop_counts(pop = pop)
}
